<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutus" xml:space="preserve">
    <value>关于我们</value>
  </data>
  <data name="author" xml:space="preserve">
    <value>作者</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="confirm" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="contact" xml:space="preserve">
    <value>联系</value>
  </data>
  <data name="donate" xml:space="preserve">
    <value>捐款</value>
  </data>
  <data name="filehasnotsavedpleasesavethefileatfirst" xml:space="preserve">
    <value>文件没有保存，请先保存文件</value>
  </data>
  <data name="license" xml:space="preserve">
    <value>授权</value>
  </data>
  <data name="ok" xml:space="preserve">
    <value>确定</value>
  </data>
  <data name="openfile" xml:space="preserve">
    <value>打开文件</value>
  </data>
  <data name="others" xml:space="preserve">
    <value>其它</value>
  </data>
  <data name="processing" xml:space="preserve">
    <value>执行中</value>
  </data>
  <data name="publish" xml:space="preserve">
    <value>发布</value>
  </data>
  <data name="publishing" xml:space="preserve">
    <value>发布中</value>
  </data>
  <data name="quickpublish" xml:space="preserve">
    <value>快速发布</value>
  </data>
  <data name="saveaspdf" xml:space="preserve">
    <value>另存为PDF</value>
  </data>
  <data name="website" xml:space="preserve">
    <value>网站</value>
  </data>
  <data name="addbasic" xml:space="preserve">
    <value>添加基本</value>
  </data>
  <data name="addroles" xml:space="preserve">
    <value>添加角色</value>
  </data>
  <data name="all" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="audio" xml:space="preserve">
    <value>声音</value>
  </data>
  <data name="choosethemenucontains" xml:space="preserve">
    <value>选择包含的目录</value>
    <comment>BuildPath</comment>
  </data>
  <data name="contains" xml:space="preserve">
    <value>包含</value>
    <comment>BuildPath</comment>
  </data>
  <data name="copy" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="editmetas" xml:space="preserve">
    <value>编辑元数据</value>
  </data>
  <data name="epubeecantsavethedataifyoucancel" xml:space="preserve">
    <value>ePUBee不会为你保存数据，确认取消。</value>
  </data>
  <data name="fileas" xml:space="preserve">
    <value>文件为</value>
  </data>
  <data name="filesinthebook" xml:space="preserve">
    <value>书中包含的文件</value>
    <comment>SaveHtmlForm</comment>
  </data>
  <data name="generatemenus" xml:space="preserve">
    <value>目录生成</value>
    <comment>BuildPath</comment>
  </data>
  <data name="h1" xml:space="preserve">
    <value>大标题&lt;h1&gt;</value>
    <comment>BuildPath</comment>
  </data>
  <data name="h2" xml:space="preserve">
    <value>副标题&lt;h2&gt;</value>
    <comment>BuildPath</comment>
  </data>
  <data name="image" xml:space="preserve">
    <value>图像</value>
  </data>
  <data name="key" xml:space="preserve">
    <value>键</value>
  </data>
  <data name="language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="lever" xml:space="preserve">
    <value>层级</value>
    <comment>BuildPath</comment>
  </data>
  <data name="none" xml:space="preserve">
    <value>无</value>
    <comment>BuildPath</comment>
  </data>
  <data name="otherfile" xml:space="preserve">
    <value>其它文件</value>
    <comment>SaveHtmlForm</comment>
  </data>
  <data name="output" xml:space="preserve">
    <value>输出</value>
  </data>
  <data name="pleasechooseapathtosavethebook" xml:space="preserve">
    <value>请选择路径保存电子书.</value>
    <comment>BuildPath</comment>
  </data>
  <data name="rename" xml:space="preserve">
    <value>重命名</value>
  </data>
  <data name="renamethemenu" xml:space="preserve">
    <value>目录重命名</value>
    <comment>Rename</comment>
  </data>
  <data name="roles" xml:space="preserve">
    <value>角色</value>
  </data>
  <data name="saveas" xml:space="preserve">
    <value>保存为</value>
  </data>
  <data name="select" xml:space="preserve">
    <value>选择</value>
    <comment>SaveHtmlForm</comment>
  </data>
  <data name="selectcover" xml:space="preserve">
    <value>选择封面</value>
  </data>
  <data name="showmenusonly" xml:space="preserve">
    <value>仅生成目录</value>
    <comment>BuildPath</comment>
  </data>
  <data name="title" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="value" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="video" xml:space="preserve">
    <value>视频</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="epubhaspublished" xml:space="preserve">
    <value>ePUB已经发布</value>
    <comment>BuildOk</comment>
  </data>
  <data name="openfolder" xml:space="preserve">
    <value>打开目录</value>
    <comment>BuildOk</comment>
  </data>
  <data name="about" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="maker" xml:space="preserve">
    <value>智多星</value>
  </data>
  <data name="pleaseselectanitem" xml:space="preserve">
    <value>请选择项.</value>
    <comment>BuildPath</comment>
  </data>
</root>